const base = process.env.NEXT_PUBLIC_API_BASE_URL || '/api';
const API_PATH = `${base}/chat`;

// FILE: C:\AiProject\chatbot\chatbot-ui\components\ChatControls.tsx
// PURPOSE: Controls-only panel; accepts apiBase + onChange from AppClient and shows resolved API path
// ENV (Next.js): NEXT_PUBLIC_API_PATH (defaults to /chat)

import React, { useEffect, useState } from "react";

type ControlConfig = {
  provider: string;
  model: string;
  crosscheck: boolean;
};

type Props = {
  apiBase: string;
  onChange: React.Dispatch<React.SetStateAction<ControlConfig>>;
};



export default function ChatControls({ apiBase, onChange }: Props): JSX.Element {
  const [cfg, setCfg] = useState<ControlConfig>({
    provider: "auto",
    model: "",
    crosscheck: false,
  });

  // Report config upward whenever it changes
  useEffect(() => {
    onChange(cfg);
  }, [cfg, onChange]);

  return (
    <div>
      <div style={{ marginBottom: 8 }}>
        <small>API: {`${apiBase}${API_PATH}`}</small>
      </div>

      <label>
        Provider&nbsp;
        <select
          value={cfg.provider}
          onChange={(e) =>
            setCfg((p) => ({ ...p, provider: e.target.value }))
          }
        >
          <option value="auto">auto</option>
          <option value="openai">openai</option>
          <option value="anthropic">anthropic</option>
          <option value="llama">llama</option>
        </select>
      </label>

      <label style={{ marginLeft: 10 }}>
        Model&nbsp;
        <input
          value={cfg.model}
          onChange={(e) =>
            setCfg((p) => ({ ...p, model: e.target.value }))
          }
          placeholder="(auto selects best available)"
          style={{ width: 220 }}
        />
      </label>

      <label style={{ marginLeft: 10 }}>
        <input
          type="checkbox"
          checked={cfg.crosscheck}
          onChange={(e) =>
            setCfg((p) => ({ ...p, crosscheck: e.target.checked }))
          }
        />
        &nbsp;Cross-check with a second model
      </label>
    </div>
  );
}





