
services:
  vector:
    image: qdrant/qdrant:latest
    container_name: chill_vector
    restart: unless-stopped
    ports:
      - "${VECTOR_PORT:-6333}:6333"
    volumes:
      - vector_data:/qdrant/storage
    # (Optional) qdrant healthcheck requires curl/wget in image; skipping for now.

  redis:
    image: redis:alpine
    container_name: chill_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 30
      start_period: 5s

  api:
    build:
      context: ./chatbot/agent-api
      dockerfile: Dockerfile
    container_name: chill_api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=${PYTHONUNBUFFERED:-1}
      - VECTOR_HOST=vector
      - VECTOR_PORT=6333
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - API_PORT=${API_PORT:-8000}
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      vector:
        condition: service_started
      redis:
        condition: service_healthy
    healthcheck:
      # wget is installed in your api image; either wget or curl is fine:
      test: ["CMD", "wget", "-qO-", "http://localhost:8000/health"]
      # test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 15s

  ui:
    build:
      context: ./chatbot/chatbot-ui
      dockerfile: Dockerfile
    container_name: chill_ui
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # IMPORTANT: This value is read by the BROWSER.
      # Use host-mapped URL, not "api" (which exists only inside Docker network).
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-http://localhost:8000}
      - NODE_ENV=production
    ports:
      - "${UI_PORT:-3000}:3000"
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/"]
      interval: 7s
      timeout: 3s
      retries: 30
      start_period: 15s

volumes:
  vector_data:
